{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE DataKinds #-}

module Main where

import Ast (makeEmptyContext)
import Control.Monad (void)
import Effectful (Eff, runEff, (:>))
import Effectful.Error.Dynamic (Error, runError)
import Repl.Console (Console, runConsole)
import Repl.Repl (repl)

reportError :: (Console :> es) => (Eff (Error e : es) a) => Eff es a
reportError eff = runError

main :: IO ()
main =
  let empty_context = makeEmptyContext
   in runEff $ runConsole (void $ repl empty_context)
